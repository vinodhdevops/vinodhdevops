name: Staging Talentinc Static Site Deployment
on:
  push:
    branches:
      - master

  workflow_dispatch:
    inputs:
      Run:
        description: "Click Run to run this job"
        required: true
        default: "Run"
      test:
        description: "Test run the deployment without actually deploying it. Type: test"
        required: false

  repository_dispatch:
    types:
      - staging-trigger

env:
  ACTION_URL: "https://github.com/${{ github.repository }}/commit/${{ github.sha }}/checks"

jobs:
  BeginSlackNotification:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: TalentInc/talentinc-devops
          path: talentinc-devops
          token: ${{ secrets.GIT_TOKEN }}

      - name: Deployment Start Slack Notification
        run: |
          set -evx
          if [ ${{github.event.inputs.test}} ]; then test="Test"; fi
          ./talentinc-devops/github_slack.sh '${{ github.event_name }}' 'starting' "Deploy for Staging TalentInc Site $test is starting." '${{ env.ACTION_URL }}' '${{ github.event.repository.html_url }}' "Staging TalentInc Site $test" '${{ secrets.SLACK_GITHUB_ACTIONS_ALERTS_WEBHOOK }}' '${{ github.event.compare }}' '${{ github.actor }}'
  build-upload:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_TI }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_TI }}
      AWS_DEFAULT_REGION: "us-east-1"
      GATSBY_ACTIVE_ENV: staging
    steps:
      - uses: actions/checkout@v2
      - name: get php 7.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.1"
      - name: Get Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Build and Upload
        run: |
          set -exv
          if [ ${{github.event.inputs.test}} ]; then test="--dryrun"; fi
          cd gatsby-site
          bucket="staging.talentinc.com"
          distribution_id="E1ARFRNNFWUSO0"
          cat <<EOM >.env.staging
          CONTENTFUL_SPACE_ID=$(aws secretsmanager get-secret-value --secret-id /auth/ti-site-static | jq -r .SecretString | jq -r .CONTENTFUL_SPACE_ID)
          CONTENTFUL_ACCESS_TOKEN=$(aws secretsmanager get-secret-value --secret-id /auth/ti-site-static | jq -r .SecretString | jq -r .CONTENTFUL_ACCESS_TOKEN)
          CONTENTFUL_ENVIRONMENT=master
          GATSBY_JAZZHR_API_KEY=$(aws secretsmanager get-secret-value --secret-id /auth/ti-site-static | jq -r .SecretString | jq -r .JAZZHR_API_KEY)
          GATSBY_EMAILJS_USER_ID=$(aws secretsmanager get-secret-value --secret-id /auth/ti-site-static | jq -r .SecretString | jq -r .EMAILJS_USER_ID)
          EOM
          npm install
          npm run clean
          npm run build
          cd public
          aws s3 sync . s3://staging.talentinc.com/ $test
